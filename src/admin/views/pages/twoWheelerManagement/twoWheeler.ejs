<!-- External Styles -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
<link href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css" rel="stylesheet">

<link rel="stylesheet" href="/admin/css/vehicleManagement/truck.css">

<style>
    .btn-pink {
        background-color: #e91e63;
        color: white;
    }

    .btn-pink:hover {
        background-color: #c2185b;
    }

    .table th,
    .table td {
        vertical-align: middle;
        text-align: center;
    }

    .modal-title {
        font-weight: bold;
    }

    .paymentSection {
        border: 2px solid #ccc;
        border-radius: 8px;
        padding: 7px 10px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        width: 49%;
        margin: 10px 0;
    }

    .paymentSection.active {
        background: linear-gradient(97deg, rgba(143, 30, 30, 1) 0%, rgba(87, 199, 133, 1) 0%, rgba(109, 184, 84, 1) 22%, rgba(237, 221, 83, 1) 65%);
    }

    .noBiddding {
        text-align: center;
        padding: 15px;
        /* background: linear-gradient(90deg, rgba(9, 9, 121, 1) 29%, rgba(0, 212, 255, 1) 100%);
        border-radius: 8px;
        border: 1px solid rgb(13, 13, 120); */

    }

    .driverPar {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .driverPar img {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        border: 1px solid #ddd;
    }

    .paymentProduct {
        margin: 0;
        font-size: 16px;
        font-weight: 400;
        color: #171786;
    }

    .totalAmount p {
        margin: 0;
        color: #34a634;
        font-size: 20px;
        font-weight: 500;
    }

    .driveParsel {
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
    }

    .deleiveryDeatil label {
        color: #2B46BD;
    }

    .podImg {
        height: 200px;
        width: 100%;
        object-fit: contain;
        border-radius: 8px;
    }
</style>

<div class="container-fluid mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h3 class="fw-bold">üèç Two Wheeler Management</h3>
        <div>
            <!-- Optional CSV download and Add buttons -->
            <!-- <button class="btn btn-success me-2" id="downloadAllCsv">
                <i class="fas fa-download me-2"></i> Download CSV
            </button>
            <button class="btn btn-pink" data-bs-toggle="modal" data-bs-target="#serviceModal">
                <i class="fas fa-plus me-2"></i> Add Service
            </button> -->
        </div>
    </div>

    <!-- Search Filters -->
    <div class="card shadow-sm mb-4" id="searchServicesCard" style="display: none;">
        <div class="card-body">
            <h5 class="mb-3">Two Wheeler Search </h5>
            <div class="row g-3">
                <div class="col-md-3">
                    <label for="searchPickup" class="form-label">Pickup Address</label>
                    <input type="text" class="form-control" id="searchPickup" placeholder="Enter Pickup Address">
                </div>
                <div class="col-md-3">
                    <label for="searchDrop" class="form-label">Drop Address</label>
                    <input type="text" class="form-control" id="searchDrop" placeholder="Enter Drop Address">
                </div>
                <div class="col-md-3">
                    <label for="searchOrderId" class="form-label">Order ID</label>
                    <input type="text" class="form-control" id="searchOrderId" placeholder="Enter Order ID">
                </div>
                <div class="col-md-3">
                    <label for="searchIsAccepted" class="form-label">Is Accepted</label>
                    <select id="searchIsAccepted" class="form-select">
                        <option value="">All</option>
                        <option value="1">Yes</option>
                        <option value="0">No</option>
                    </select>
                </div>

                <div class="col-md-3">
                    <label for="searchTxnStatus" class="form-label">Txn Status</label>
                    <select id="searchTxnStatus" class="form-select">
                        <option value="">All</option>
                        <option value="1">Done</option>
                        <option value="0">Pending</option>
                    </select>
                </div>
                <div class="col-12 mt-3 d-flex gap-2">
                    <button class="btn btn-primary" id="searchBtn">Search</button>
                    <button class="btn btn-secondary" id="resetBtn">Reset</button>
                </div>
            </div>
        </div>
    </div>


    <!-- Data Table -->
    <div class="card shadow-sm">
        <div class="card-body">
            <div class="table-responsive">
                <table id="serviceTable" class="table table-bordered table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>#</th>
                            <th>Pickup Address</th>
                            <th>Drop Address</th>
                            <th>Vehicle Name</th>
                            <th>Driver Name</th>
                            <th>User Name</th>
                            <th>Order Id</th>
                            <th>Status</th>
                            <th>Is Accepted</th>
                            <th>Txn Status</th>
                            <th>Wallet Pay</th>
                            <th>Total</th>
                            <th>Subtotal</th>
                            <th>Shipping</th>
                            <th>Handling</th>
                            <th>GST ‚Çπ</th>
                            <th>GST %</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="twoWheelerModal" tabindex="-1" aria-labelledby="modalTitle" aria-hidden="true">
    <div class="modal-dialog modal-lg custom-modal">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">Two Wheeler Order Detail</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="driverSectionInfo">
                    <div class="driveParsel d-none">
                        <h2 class="text-center w-100 m-0">Bidding Detail</h2>
                    </div>
                    <div class="driveParsel" id="driveParsel">
                        <!-- <div class="paymentSection active">
                            <div class="driverPar">
                                <img class="img-fluid"
                                    src="https://media.istockphoto.com/id/1475569433/photo/natural-beauty.jpg?s=612x612&w=0&k=20&c=E2rlrHpnW61d_BsQFBiXuuOE9lKV3KUU-Auraj7evhs=">
                                <h6 class="paymentProduct">Home Work</h6>
                            </div>

                            <div class="totalAmount">
                                <p>‚Çπ 80.00/-</p>
                            </div>
                        </div> -->
                    </div>

                    <div class="noBiddding">
                        <p class="text-center w-100 m-0">No Bidding Yet</p>
                    </div>
                </div>

                <div class="deleiveryDeatil mt-3">
                    <h3 class="text-center">POD Details</h3>
                    <div class="form-group row">
                        <div class="col-md-6 mb-2">
                            <label for="">Recipiet Name</label>
                            <input class="form-control" type="text" placeholder="Recipiet Name" id="recipientName"
                                readonly>
                        </div>

                        <div class="col-md-6 mb-2">
                            <label for="">Confirm Number</label>
                            <input class="form-control" type="text" placeholder="+91 1234567890" id="confirmNumber"
                                readonly>
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-6 mb-2">
                            <label for="">Delivery Date</label>
                            <input class="form-control" type="date" placeholder="Delivery Date" readonly
                                id="deliveryDate">
                        </div>

                        <div class="col-md-6 mb-2">
                            <label for="">Delivery Time</label>
                            <input class="form-control" type="time" placeholder="Delivery Time" readonly
                                id="deliveryTime">
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-12 mb-2">
                            <label for="">POD</label>
                            <img class="img-fluid podImg" id="pod" src="/admin/images/No_Image_Available.jpg">

                        </div>
                    </div>



                </div>

            </div>
        </div>
    </div>
</div>


<!-- Script -->
<script>

    function convertTo24Hour(timeStr) {
        if (!timeStr) return '';

        // Replace narrow non-breaking space with normal space, if necessary
        timeStr = timeStr.replace(/\u202F/g, ' ');

        const [time, modifier] = timeStr.split(' ');
        let [hours, minutes] = time.split(':').map(Number);

        if (modifier === 'PM' && hours !== 12) {
            hours += 12;
        } else if (modifier === 'AM' && hours === 12) {
            hours = 0;
        }

        return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;
    }


    $(document).ready(function () {
        const searchServicesCard = $('#searchServicesCard');
        searchServicesCard.slideDown(600);

        const table = $('#serviceTable').DataTable({
            processing: true,
            serverSide: true,
            pageLength: 10,
            lengthMenu: [10, 25, 50, 100],
            // scrollY: "400px",
            // scrollCollapse: true,
            searching: false,
            ajax: {
                url: '/twoWheeler/twoWheelerList',
                type: 'POST',
                data: function (d) {
                    d.pickupAddress = $('#searchPickup').val();
                    d.dropAddress = $('#searchDrop').val();
                    d.vehcileName = $('#searchVehicle').val(); // spelling kept consistent with backend (fix backend if needed)
                    d.orderId = $('#searchOrderId').val();
                    d.isAccepted = $('#searchIsAccepted').val();
                    d.isPartialPayment = $('#searchIsPartial').val();
                    d.transactionStatus = $('#searchTxnStatus').val();
                }

            },
            columns: [
                {
                    data: null,
                    orderable: false,
                    render: (data, type, row, meta) => meta.row + meta.settings._iDisplayStart + 1
                },
                {
                    data: 'pickupAddress', orderable: false,
                    render: d => d ? (d.length > 30 ? d.slice(0, 30) + '...' : d) : '-'
                },
                {
                    data: 'dropAddress', orderable: false,
                    render: d => d ? (d.length > 30 ? d.slice(0, 30) + '...' : d) : '-'
                },
                {
                    data: 'driverId.vehicleDetail.vehicleName', orderable: false,
                    render: d => d ? d : '-'


                },

                {
                    data: 'driverId',
                    orderable: false,
                    render: function (data, type, row) {
                        return data?.personalInfo?.name || 'N/A';
                    }
                },
                {
                    data: 'userId',
                    orderable: false,
                    render: function (data, type, row) {
                        return row.userId?.fullName || 'N/A';
                    }
                },

                { data: 'orderId', orderable: false },
                {
                    data: 'orderStatus',
                    orderable: false,

                    render: function (data) {
                        // Status color mapping
                        let statusColor = '';
                        let statusText = '';

                        switch (parseInt(data)) { // Ensure data is treated as an integer for comparison
                            case 1:
                                statusColor = 'badge bg-warning'; // Pickup
                                statusText = 'Pick Up';
                                break;
                            case 2:
                                statusColor = 'badge bg-info'; // Out for Delivery
                                statusText = 'In Transit';
                                break;
                            case 3:
                                statusColor = 'badge bg-primary'; // In Progress
                                statusText = 'Out for Delivery';
                                break;
                            case 4:
                                statusColor = 'badge bg-success'; // Delivered
                                statusText = 'Delivered';
                                break;
                            case 5:
                                statusColor = 'badge bg-danger'; // Cancelled
                                statusText = 'Cancelled';
                                break;
                            default:
                                statusColor = 'badge bg-secondary'; // In Process
                                statusText = 'In Process';
                                break;
                        }

                        return `<span class="${statusColor}">${statusText}</span>`;
                    }
                },
                { data: 'isAccepted', render: d => d ? 'Yes' : 'No', orderable: false },
                { data: 'transactionStatus', orderable: false, render: d => d ? 'Done' : 'Pending' },
                { data: 'isWalletPay', orderable: false, render: d => d ? 'Yes' : 'No' },
                { data: 'totalPayment', orderable: false },
                { data: 'subTotal', orderable: false },
                { data: 'shippingCost', orderable: false },
                { data: 'specialHandling', orderable: false },
                { data: 'gst', orderable: false },
                { data: 'gstPercentage', orderable: false },
                {
                    data: null,
                    orderable: false, // Disable ordering for the serial number column
                    render: (data, type, row) => `
                        <button class="btn btn-sm btn-primary me-2 orderDetailBtn"  data-id='${row._id}'>
                    <i class="fas fa-shopping-basket" aria-hidden="true"></i>Details
                        </button>
                      `
                }

            ],
            order: [[1, 'asc']]
        });

        // Search & Reset
        $('#searchBtn').click(() => table.ajax.reload());
        $('#resetBtn').click(() => {
            $('#searchServiceName, #searchStatus, #searchCreatedAt').val('');
            table.ajax.reload();
        });

        // Modal Cleanup
        $('#serviceModal').on('hidden.bs.modal', function () {
            $(this).find('.is-invalid').removeClass('is-invalid');
            $(this).find('.invalid-feedback').remove();
        });

        // Status Change
        $('#serviceTable').on('click', '.changeStatus', function () {
            const serviceId = $(this).data('id');
            const newStatus = $(this).data('status');
            const text = newStatus == 1 ? 'Active' : 'Inactive';

            if (confirm(`Change status to ${text}?`)) {
                $.ajax({
                    url: '/service/changeStatus/' + serviceId,
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ status: newStatus }),
                    success: (res) => {
                        if (res.success) {
                            table.ajax.reload();
                            toastr.success(res.message);
                        } else {
                            toastr.error(res.message || 'Status update failed');
                        }
                    },
                    error: () => toastr.error('Error occurred while changing status.')
                });
            }
        });
        $('#resetBtn').on('click', function () {
            $('#searchServicesCard input, #searchServicesCard select').val('');
            $('#serviceTable').DataTable().ajax.reload();
        });

        $('#serviceTable').on('click', '.orderDetailBtn', function () {
            const id = $(this).data('id');
            $('#twoWheelerModal').modal('show');

            $.ajax({
                url: `/twoWheeler/twoWheelerOrderDetail/${id}`,
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    if (!response?.success) {
                        toastr.error(response?.message || 'Something went wrong');
                        return;
                    }

                    const data = response.data || {};

                    // Populate modal fields
                    $('#recipientName').val(data.recipientName || '');
                    if (data.deliveryDate) {
                        const [month, day, year] = data.deliveryDate.split('/');
                        $('#deliveryDate').val(`${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`);
                    } else {
                        $('#deliveryDate').val('');
                    }
                    if (data.deliveryTime) {
                        $('#deliveryTime').val(convertTo24Hour(data.deliveryTime));
                    } else {
                        $('#deliveryTime').val('');
                    }

                    $('#confirmNumber').val(data.confirmNumber || '');
                    if (data.pod)
                        $('#pod').attr('src', data.pod);

                    // Handle Bidding
                    const $noBidding = $('.noBiddding');
                    const $container = $('#driveParsel');
                    const bidding = Array.isArray(data.bidding) ? data.bidding : [];

                    if (data.isBidding === 1) {
                        if (bidding.length === 0) {
                            $container.addClass('d-none').empty();
                            $noBidding.removeClass('d-none');
                        } else {
                            $noBidding.addClass('d-none');
                            $container.removeClass('d-none').empty();

                            const html = bidding.map(item => `
                        <div class="paymentSection ${item.driverId || ''}">
                            <div class="driverPar">
                                <img class="img-fluid" src="${item.driverProfile || ''}" alt="${item.driverName || 'Driver'}">
                                <h6 class="paymentProduct mb-0">${item.driverName || '-'}</h6>
                                ${renderRating(item.averageRating, item.totalRatings)}
                            </div>
                            <div class="totalAmount">
                                <p>‚Çπ ${Number(item.biddingAmount || 0).toFixed(2)}/-</p>
                            </div>
                        </div>
                    `).join('');

                            $container.html(html);

                            // Optional: highlight selected driver if needed
                            $(`.${data.driverId}`).addClass('active');
                            $('.driveParsel').removeClass('d-none');

                        }
                    } else {
                        // Hide bidding section if not bidding
                        $container.addClass('d-none').empty();
                        $noBidding.addClass('d-none');
                        $('.driveParsel').addClass('d-none');
                    }
                },
                error: function () {
                    alert('Error fetching user data.');
                }
            });
        });


        // Optional: simple star rating (unicode). Remove if you don't need it.
        function renderRating(avg, total) {
            avg = parseFloat(avg) || 0;
            total = total || 0;

            const full = Math.floor(avg);
            const half = avg % 1 >= 0.5 ? 1 : 0;
            const empty = 5 - full - half;

            return `
        <div class="rating text-warning small">
            ${'‚òÖ'.repeat(full)}${half ? '‚Ø™' : ''}${'‚òÜ'.repeat(empty)}
            <span class="text-muted"> (${avg.toFixed(1)})</span>
        </div>
    `;
        }

        // Download CSV
        $('#downloadAllCsv').on('click', () => {
            window.location.href = '/service/downloadAllCsv';
        });



    });
</script>